{"version":3,"file":"static/js/450.854380d4.chunk.js","mappings":"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","sources":["components/SchoolNotice/SchoolNotice.tsx","library/Card/SingleButton.tsx","library/Card/SelectedCard.tsx","library/ErrorMessage/ErrorMessage.tsx","library/StyledComponents/DotLegendStyled.tsx","library/Legend/DotLegend.tsx","library/Card/Card2Text.tsx","library/List/ListCard.tsx","library/StyledComponents/CommonStyled.tsx","library/heading/pageHeader.tsx","../node_modules/@mui/icons-material/ArrowLeft.js","../node_modules/@mui/icons-material/ArrowRight.js","../node_modules/@mui/icons-material/CheckCircle.js","../node_modules/@mui/icons-material/RadioButtonUnchecked.js"],"sourcesContent":["import { Card, Container, Grid, IconButton } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport PageHeader from 'src/library/heading/pageHeader';\r\nimport ArrowLeftIcon from '@mui/icons-material/ArrowLeft';\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from 'src/store';\r\nimport DotLegend from 'src/library/Legend/DotLegend';\r\nimport ListCard from 'src/library/List/ListCard';\r\nimport SelectedCard from 'src/library/Card/SelectedCard';\r\nimport { useNavigate } from 'react-router';\r\nimport SuspenseLoader from 'src/layouts/Components/SuspenseLoader';\r\nimport { getSchoolNoticeDates, getSchoolNoticeDetailsByDate} from 'src/requests/SchoolNotice1/RequestSchoolNotice';\r\nimport { getDateFormatted } from '../Common/util';\r\nimport TabulerList from 'src/library/List/TabulerList';\r\nimport { IAddSchoolNotice, IGetSchoolNoticeDetails } from 'src/Interface/SchoolNotice/ISchoolNotice';\r\n\r\nconst SchoolNotice = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const SchoolNoticeDates = useSelector((state: RootState) => state.SchoolNotice.SchoolNoticeDates);\r\n  const SchoolNoticeDetailsByDate = useSelector((state: RootState) => state.SchoolNotice.SchoolNoticeDetailsByDate); \r\n\r\n  const [visibleDates, setVisibleDates] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\nuseEffect(()=>{\r\n  dispatch(getSchoolNoticeDates())\r\n},[])\r\n  useEffect(() => {\r\n    // Set the initial visible dates\r\n    setVisibleDates(SchoolNoticeDates.slice(0, 6));\r\n  }, [SchoolNoticeDates]);\r\n\r\n  const handlePrevious = () => {\r\n    const newIndex = Math.max(currentIndex - 6, 0);\r\n    setCurrentIndex(newIndex);\r\n    setVisibleDates(SchoolNoticeDates.slice(newIndex, newIndex + 6));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const newIndex = Math.min(currentIndex + 6, SchoolNoticeDates.length - 6);\r\n    setCurrentIndex(newIndex);\r\n    setVisibleDates(SchoolNoticeDates.slice(newIndex, newIndex + 6));\r\n  };\r\nconsole.log(SchoolNoticeDetailsByDate)\r\n  const clickItems = (value) => {\r\n    const getNoticeDetails: IGetSchoolNoticeDetails = {\r\n      ClassId:2,\r\n      NoticeDate:(value.value).toString()\r\n    }\r\n    dispatch(getSchoolNoticeDetailsByDate(getNoticeDetails))\r\n    console.log(SchoolNoticeDetailsByDate)\r\n  };\r\n\r\n  const clickViewSchoolNotice = (value) => {\r\n    navigate('ViewSchoolNotice/' + value);\r\n  };\r\n  return (\r\n  <>\r\n    <Container>\r\n      <PageHeader heading={'View School Notice'} />\r\n      <DotLegend ItemList={[{ Value: 'Green', Name: 'Received School Notice' }]} /><br />\r\n      <Grid container spacing={2} alignItems={\"center\"}>\r\n        <Grid item xs={2} alignItems={\"center\"}>\r\n          <IconButton disabled={currentIndex === 0} onClick={handlePrevious}>\r\n            <ArrowLeftIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <SelectedCard ItemList={visibleDates} clickItem={(value) => clickItems(value)}  type='Button' />\r\n        </Grid>\r\n        <Grid item xs={2} alignItems={\"center\"}>\r\n          <IconButton disabled={currentIndex + 6 >= SchoolNoticeDates.length} onClick={handleNext}>\r\n            <ArrowRightIcon />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n      <br />\r\n          {/* <TabulerList ItemList={SchoolNoticeDetailsByDate} clickEdit={clickEdit}  Delete={ClickDelete} /> */}\r\n          \r\n        <ListCard ItemList={SchoolNoticeDetailsByDate} clickNavigate={clickViewSchoolNotice} />\r\n    </Container>\r\n\r\n\r\n  </>\r\n  );\r\n};\r\n\r\nexport default SchoolNotice;\r\n","import { Button ,Card, Checkbox, Typography} from '@mui/material'\r\nimport React from 'react'\r\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\n\r\nconst SingleButton = ({Item,ClickItem ,type=\"checkBox\"}) => {\r\n \r\n  const onClick=()=>{\r\n    Item = {...Item,IsActive:Item.IsActive?Item.IsActive:!Item.IsActive}\r\n    ClickItem(Item)}\r\n  return (\r\n    <div>\r\n      {type === \"checkBox\" ?  <Card sx={{display:\"flex\"}}>\r\n      {Item.IsActive ? <CheckCircleIcon  onClick={onClick} /> :\r\n           <RadioButtonUncheckedIcon  onClick={onClick}  />}\r\n          <Typography>{Item.Name}</Typography>\r\n    </Card>:\r\n    <Card sx={{background:Item.IsActive  ? \"#90CAF9\" : \"#ffffff\" , textAlign:\"center\"}}   onClick={onClick}>{Item.Name}</Card>\r\n  }\r\n   \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SingleButton","import React from 'react';\r\nimport { Grid } from '@mui/material';\r\nimport SingleButton from './SingleButton';\r\n\r\nfunction SelectedCard({ ItemList, clickItem, type = \"checkBox\" }) {\r\n  const onClick = (item) => {\r\n    // Pass only the clicked item\r\n    clickItem(item);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      {ItemList.map((item, i) => (\r\n        <Grid item xs={4} key={i}>\r\n          <SingleButton Item={item} ClickItem={() => onClick(item)} type={type} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default SelectedCard;\r\n","import { Typography } from '@mui/material'\r\nimport React from 'react'\r\n\r\nfunction ErrorMessage({error}) {\r\n  return (\r\n    <div>\r\n      <Typography sx={{textAlign:\"center\" , color:\"red\"}}>{error}</Typography>  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage","import { Box, styled } from \"@mui/material\";\r\n\r\nexport const DotLegendStyled = styled(Box)(\r\n    ({ theme, color }) => `\r\n        border-radius: 22px;\r\n        width: ${theme.spacing(1.5)};\r\n        height: ${theme.spacing(1.5)};\r\n        @media (min-width: 280px) and (max-width: 320px)  {\r\n          width: ${theme.spacing(1)};\r\n          height: ${theme.spacing(1)};\r\n        };\r\n        display: inline-block;\r\n        margin-right: ${theme.spacing(1)};\r\n        margin-top: -${theme.spacing(0.1)};\r\n        border: 1px #303030   solid;\r\n        \r\n  \r\n    `\r\n);","import { Typography,Box } from '@mui/material'\r\nimport React from 'react'\r\nimport { DotLegendStyled } from '../StyledComponents/DotLegendStyled'\r\n\r\n\r\nconst DotLegend = ({ItemList}) => {\r\n  return (<>\r\n    {\r\n      ItemList.map((item,i)=>{ return (<Box key={i} sx={{display:\"flex\" }}>\r\n     <DotLegendStyled  style={{backgroundColor:item.Value}}/>\r\n    <Typography variant='h6' mt={-0.7}>{item.Name}</Typography>\r\n    </Box>)\r\n      })\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DotLegend","import React from 'react'\r\nimport { Box , Card, Typography } from '@mui/material'\r\nfunction Card2Text({ Item,clickNavigate}) {\r\n  // function Card2Text({ Text1,Text2,clickNavigate ,Link}) {\r\n  return (\r\n    <>\r\n    {/* <a href=\"http://google.com\" rel=\"noreferrer\" target=\"_blank\" style={{ textDecoration: 'none' }}> */}\r\n    <a href={Item.Link} rel=\"noreferrer\" target=\"_blank\" style={{ textDecoration: 'none' }}>\r\n       <Card component={Box} mb={1} onClick={()=>{clickNavigate(Item.Id)}}>\r\n    <Box display={\"flex\"} justifyContent={'space-between'}  p={0.5}>\r\n      <Typography variant=\"h5\">\r\n          {Item.Text1}\r\n        </Typography>\r\n      <Typography variant='body2' color={\"Green\"} >\r\n         {Item.Text2}\r\n     </Typography>\r\n    </Box>\r\n    </Card>\r\n    </a>\r\n    \r\n    </>\r\n \r\n  )\r\n}\r\n\r\nexport default Card2Text","import React from 'react'\r\nimport Card2Text from '../Card/Card2Text'\r\nimport ErrorMessage from '../ErrorMessage/ErrorMessage'\r\n\r\nfunction ListCard({ ItemList, clickNavigate }) {\r\n  return (\r\n    <div>\r\n\r\n      {ItemList.length == 0 ? <ErrorMessage error={'No records found'} /> :\r\n        <>\r\n          {ItemList.map((Item, i) => {\r\n            return (\r\n              <div key={i}>\r\n                <Card2Text Item={Item}\r\n                // <Card2Text Text1={Item.Text1} Text2={Item.Text2} Link={Item.Link} \r\n                clickNavigate={clickNavigate} />\r\n              </div>\r\n            )\r\n          })}\r\n\r\n        </>\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListCard","import { Box, Button, Typography, styled} from '@mui/material';\r\n\r\nexport const HeadingStyle= styled(Typography)( ({ theme }) =>`\r\n\r\nfont-weight: 500;\r\nfont-size: 20px;\r\ncolor: black;\r\nmargin: auto;\r\ntext-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\r\nfont-family: roboto;\r\n@media (min-width: 280px) and (max-width: 320px)  {\r\n  font-size: 18px;\r\n};\r\n@media (min-width: 600px)  {\r\n  font-size: 22px;\r\n};\r\n`);\r\n\r\nexport const IconCardSize = styled(Box)`\r\n \r\n  width:70px;\r\n  height:75px;\r\n  @media (max-width: 320px) {\r\n    width: 60px;\r\n    height: 65px;\r\n  }\r\n  @media (max-width: 280px) {\r\n    width: 50px;\r\n    height: 55px;\r\n  }\r\n\r\n  border-radius: 10px;\r\n  margin-bottom: 5px;\r\n  text-align: center;\r\ntext-decoration: none;\r\n  box-shadow: 1px 4px 5px 2px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\n\r\nexport const ButtonPrimary = styled(Button)(\r\n  ({ theme, color }) => `\r\ncolor: white;\r\nfont-size: 12px;\r\nfont-family: 'Roboto';\r\ntext-decoration: none;\r\nheight:30px;\r\nborder-radius: 3px;\r\nbox-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\r\n@media (min-width: 600px) {\r\n  \r\n };\r\n`);","import { FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { styled, Typography, Box, Divider, useTheme, Container } from '@mui/material';\r\nimport { HeadingStyle } from '../StyledComponents/CommonStyled';\r\nimport { useNavigate } from 'react-router';\r\n\r\ninterface PageHeaderProps {\r\n  heading: string;\r\n}\r\n\r\nconst RootWrapper = styled(Box)(\r\n  ({ theme }) => `\r\n        margin-top: ${theme.spacing(2)};\r\n        margin-bottom: ${theme.spacing(2)};\r\n`\r\n);\r\n\r\nconst PageHeader: FC<PageHeaderProps> = ({ heading}) => {\r\n  const theme = useTheme();\r\n\r\n  const navigate = useNavigate();\r\n  if (sessionStorage.getItem(\"UserId\") === null ||\r\n    sessionStorage.getItem(\"UserId\") === undefined) {\r\n    navigate('/')\r\n  }\r\n  return (\r\n    <Container>\r\n      <RootWrapper display=\"flex\" alignItems=\"center\">\r\n      <HeadingStyle>{(heading)}</HeadingStyle>\r\n       </RootWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nPageHeader.propTypes = {\r\n  heading: PropTypes.string,\r\n};\r\n\r\nexport default PageHeader;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m14 7-5 5 5 5V7z\"\n}), 'ArrowLeft');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m10 17 5-5-5-5v10z\"\n}), 'ArrowRight');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');\n\nexports.default = _default;"],"names":["SchoolNotice","dispatch","useDispatch","navigate","useNavigate","SchoolNoticeDates","useSelector","state","SchoolNoticeDetailsByDate","visibleDates","setVisibleDates","useState","currentIndex","setCurrentIndex","useEffect","getSchoolNoticeDates","slice","console","log","_jsx","_Fragment","children","_jsxs","Container","PageHeader","heading","DotLegend","ItemList","Value","Name","Grid","container","spacing","alignItems","item","xs","IconButton","disabled","onClick","handlePrevious","newIndex","Math","max","ArrowLeftIcon","SelectedCard","clickItem","value","getNoticeDetails","ClassId","NoticeDate","toString","getSchoolNoticeDetailsByDate","clickItems","type","length","handleNext","min","ArrowRightIcon","ListCard","clickNavigate","_ref","Item","ClickItem","IsActive","Card","sx","display","CheckCircleIcon","RadioButtonUncheckedIcon","Typography","background","textAlign","map","i","SingleButton","error","color","DotLegendStyled","styled","Box","theme","concat","style","backgroundColor","variant","mt","href","Link","rel","target","textDecoration","component","mb","Id","justifyContent","p","Text1","Text2","ErrorMessage","Card2Text","HeadingStyle","IconCardSize","_templateObject","_taggedTemplateLiteral","ButtonPrimary","Button","_ref2","RootWrapper","useTheme","sessionStorage","getItem","undefined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}